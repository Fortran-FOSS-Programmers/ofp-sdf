module AST

exports 

  context-free start-symbols OfpProgram

  sorts

    String StrChar

    OfpLabel
    OfpName

    OfpScope
    OfpSpecPart
    OfpExecPart
    OfpFuncPart

    OfpDecl
    OfpStmt
    OfpBeginStmt
    OfpEndStmt

    OfpProgram
    OfpFile
    OfpProgramUnit

    INTEGER                  %% R404
    REAL
    DOUBLEPRECISION
    COMPLEX
    CHARACTER
    LOGICAL
    DOUBLECOMPLEX

    OfpType
    OfpLiteral                        %% R406

    OfpCharLength                     %% R422


    OfpTypeDeclarationStmt            %% R501
    OfpAttrSpec                       %% R502
    OfpEntityDecl                     %% R503
                                      %% R504  ObjectName - lex
    OfpInitialization                 %% R505

    OfpLanguageBinding                %% R508
    OfpCoarraySpec                    %% R509

    OfpArraySpec                      %% R515  
    OfpExplicitShape                  %% R516
    OfpDimSpec                        %% R517-R518
    OfpAssumedOrDeferredShape         %% R519-R520
    OfpAssumedSize                    %% R521
    OfpImpliedShape                   %% R522
    OfpAssumedRank                    %% R522a


    OfpImplicitStmt          %% R560

    OfpVarDef                %% R602
    OfpVarRef                %% R612

    OfpAssignmentStmt        %% R732

    OfpMainProgram           %% R1101
    OfpProgramStmt           %% R1102
    OfpEndProgramStmt        %% R1103

    OfpModule                %% R1104
    OfpModuleStmt            %% R1105
    OfpEndModuleStmt         %% R1106

    OfpPrefix                %% R1225
    OfpPrefixSpec            %% R1226
    ELEMENTAL
    IMPURE
    MODULE
    PURE
    RECURSIVE

    OfpSuffix                %% R1231
    OfpSuffixSpec
    OfpResultName

    OfpSubroutine            %% R1233
    OfpSubroutineStmt        %% R1234
    OfpDummyArg              %% R1235
    OfpArgList
    STAR
    OfpEndSubroutineStmt     %% R1236

    OfpMpSubprogram          %% R1237
    OfpMpSubprogramStmt      %% R1238
    OfpEndMpSubprogramStmt   %% R1239

    OfpContainsStmt          %% R1242

%% Clause 7, Expressions and assignment

    OfpExpr

  lexical syntax

    "\"" StrChar* "\""   -> String
    ~[\"\\\n]            -> StrChar
    [\\][\"\\n]          -> StrChar

    "ELEMENTAL"          -> ELEMENTAL
    "IMPURE"             -> IMPURE
    "MODULE"             -> MODULE
    "PURE"               -> PURE
    "RECURSIVE"          -> RECURSIVE

    "*"                  -> STAR

  context-free syntax

  String    -> OfpLabel   {cons("OfpLabel")}
  String    -> OfpName    {cons("OfpName")}

%% TEMPORARY

  String -> OfpLiteral       {cons("OfpLiteral")}

%% Additional (new) syntax rules for AST nodes

  String    -> OfpFile      {cons("OfpFile")}

  OfpSpecPart OfpExecPart OfpFuncPart
     OfpBeginStmt? OfpContainsStmt? OfpEndStmt?   -> OfpScope     {cons("OfpScope")}

  OfpDecl*  -> OfpSpecPart  {cons("OfpSpecPart")}
  OfpStmt*  -> OfpExecPart  {cons("OfpExecPart")}
  OfpDecl*  -> OfpFuncPart  {cons("OfpFuncPart")}

%%R201
  OfpFile? OfpProgramUnit+    -> OfpProgram      {cons("OfpProgram")}

%%R202
  OfpMainProgram              -> OfpProgramUnit
  OfpModule                   -> OfpProgramUnit
  OfpSubroutine               -> OfpProgramUnit


%% 4.4 Intrinsic types
%%

                              -> INTEGER          {cons("INTEGER")}                %% R404
                              -> REAL             {cons("REAL")}
                              -> DOUBLEPRECISION  {cons("DOUBLEPRECISION")}
                              -> COMPLEX          {cons("COMPLEX")}
                              -> CHARACTER        {cons("CHARACTER")}
                              -> LOGICAL          {cons("LOGICAL")}
                              -> DOUBLECOMPLEX    {cons("DOUBLECOMPLEX")}

  INTEGER         OfpExpr?    -> OfpType          {cons("OfpType")}
  REAL            OfpExpr?    -> OfpType          {cons("OfpType")}
  DOUBLEPRECISION OfpExpr?    -> OfpType          {cons("OfpType")}
  COMPLEX         OfpExpr?    -> OfpType          {cons("OfpType")}
  CHARACTER       OfpExpr?    -> OfpType          {cons("OfpType")}
  LOGICAL         OfpExpr?    -> OfpType          {cons("OfpType")}
  DOUBLECOMPLEX   OfpExpr?    -> OfpType          {cons("OfpType")}

  String OfpType              -> OfpLiteral       {cons("OfpLiteral")}             %% R406

  OfpLabel? OfpType
            OfpAttrSpec*
            OfpEntityDecl+    -> OfpTypeDeclarationStmt {cons(" OfpTypeDeclarationStmt")} %% R501
  OfpTypeDeclarationStmt      -> OfpDecl

  "ALLOCATABLE"               -> OfpAttrSpec      {cons("ALLOCATABLE")}            %% R502

  OfpName OfpArraySpec?
          OfpCoarraySpec?
          OfpCharLength?
          OfpInitialization?  -> OfpEntityDecl    {cons("OfpEntityDecl")}          %% R503

%%TODO
  String -> OfpArraySpec
  String -> OfpCoarraySpec
  String -> OfpCharLength
  String -> OfpInitialization

%%R502  OfpAttrSpec
%%TODO remove? or stuff allocable in it

%%  OfpName ArraySpec?
%%          CoarraySpec?
%%          CharLength?
%%          Initialization?     -> OfpEntityDecl    {cons("OfpEntityDecl")}          %% R503

  OfpName?                    -> OfpLanguageBinding {cons("OfpLanguageBinding")}     %% R508

  OfpDimSpec+                 -> OfpExplicitShape {cons("OfpExplicitShape")}       %% R516

  OfpExpr OfpExpr             -> OfpDimSpec       {cons("OfpDimSpec")}             %% R517-R518
  OfpExpr String              -> OfpDimSpec       {cons("OfpDimSpec")}

  OfpDimSpec+     -> OfpAssumedOrDeferredShape {cons("OfpAssumedOrDeferredShape")} %% R519-R520
  OfpDimSpec+     -> OfpAssumedSize            {cons("OfpAssumedSize")}            %% R521
  OfpDimSpec+     -> OfpImpliedShape           {cons("OfpImpliedShape")}           %% R522
  OfpDimSpec+     -> OfpAssumedRank            {cons("OfpAssumedRank")}            %% R522a

  OfpLabel? OfpType*          -> OfpImplicitStmt  {cons("OfpImplicitStmt")}        %% R560
  OfpImplicitStmt             -> OfpDecl

  OfpName                     -> OfpVarDef  {cons("OfpVarDef")}                    %% R602
  OfpName                     -> OfpVarRef  {cons("OfpVarRef")}                    %% R612


%%%%%%%%%%
%% Fortran ISO/IEC 1539:1991 section R7xx Expressions and Assignments
%%%%%%%%%%

  OfpLiteral                  -> OfpExpr            {cons("OfpExpr")}
  OfpVarRef                   -> OfpExpr            {cons("OfpExpr")}

  OfpExpr OfpExpr             -> OfpExpr            {cons("OfpPlusExpr")}

  OfpLabel? OfpVarDef OfpExpr -> OfpAssignmentStmt {cons("OfpAssignmentStmt")}     %% R732
  OfpAssignmentStmt           -> OfpStmt

  OfpName?  OfpScope          -> OfpMainProgram     {cons("OfpMainProgram")}       %% R1101
  OfpLabel? OfpName           -> OfpProgramStmt     {cons("OfpProgramStmt")}       %% R1102
  OfpLabel? OfpName?          -> OfpEndProgramStmt  {cons("OfpEndProgramStmt")}    %% R1103
  OfpProgramStmt              -> OfpBeginStmt
  OfpEndProgramStmt           -> OfpEndStmt

  OfpName?  OfpScope          -> OfpModule          {cons("OfpModule")}            %% R1104
  OfpLabel? OfpName           -> OfpModuleStmt      {cons("OfpModuleStmt")}        %% R1105
  OfpLabel? OfpName?          -> OfpEndModuleStmt   {cons("OfpEndModuleStmt")}     %% R1106
  OfpModuleStmt               -> OfpBeginStmt
  OfpEndModuleStmt            -> OfpEndStmt

  OfpPrefixSpec*              -> OfpPrefix          {cons("OfpPrefix")}            %% R1225
%%TODO declaration-type-spec  -> OfpPrefixSpec
  ELEMENTAL                   -> OfpPrefixSpec      {cons("ELEMENTAL")}
  IMPURE                      -> OfpPrefixSpec      {cons("IMPURE")}
  MODULE                      -> OfpPrefixSpec      {cons("MODULE")}
  PURE                        -> OfpPrefixSpec      {cons("PURE")}
  RECURSIVE                   -> OfpPrefixSpec      {cons("RECURSIVE")}
  
  OfpLanguageBinding          -> OfpSuffixSpec      {cons("OfpLanguageBinding")}        %% R1229
  OfpResultName               -> OfpSuffixSpec      {cons("OfpResultName")}
  OfpName                     -> OfpResultName      {cons("OfpResultName")}

  OfpSuffixSpec*              -> OfpSuffix              {cons("OfpSuffix")}             %% R1231

  OfpName OfpScope            -> OfpSubroutine          {cons("OfpSubroutine")}         %% R1233
  OfpLabel? OfpName OfpArgList
                    OfpPrefix
                    OfpSuffix -> OfpSubroutineStmt      {cons("OfpSubroutineStmt")}      %% R1234
  OfpName                     -> OfpDummyArg                                             %% R1235
  STAR                        -> OfpDummyArg            {cons("STAR")}
  OfpDummyArg*                -> OfpArgList             {cons("OfpArgList")}
  OfpLabel? OfpName?          -> OfpEndSubroutineStmt   {cons("OfpEndSubroutineStmt")}   %% R1236
  OfpSubroutineStmt           -> OfpBeginStmt
  OfpEndSubroutineStmt        -> OfpEndStmt

  OfpName?  OfpScope          -> OfpMpSubprogram        {cons("OfpMpSubprogram")}        %% R1237
  OfpLabel? OfpName           -> OfpMpSubprogramStmt    {cons("OfpMpSubprogramStmt")}    %% R1238
  OfpLabel? OfpName?          -> OfpEndMpSubprogramStmt {cons("OfpEndMpSubprogramStmt")} %% R1239
  OfpMpSubprogramStmt         -> OfpBeginStmt
  OfpEndMpSubprogramStmt      -> OfpEndStmt
  OfpMpSubprogram             -> OfpDecl

  OfpLabel?                   -> OfpContainsStmt    {cons("OfpContainsStmt")}      %% R1242
