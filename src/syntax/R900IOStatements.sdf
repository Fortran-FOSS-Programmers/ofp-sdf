      
%%%%%%%%%%
%% Fortran ISO/IEC 1539:1991 section R9xx Input/Output Statements
%%%%%%%%%%

%%TODO module languages/fortran/syntax/R900IOStatements
module R900IOStatements

imports
%%TODO  languages/fortran/syntax/FortranLex
%%TODO  languages/fortran/syntax/Fortran90
 FortranLex
 Fortran

exports

sorts

%% 9.5 File connection

  IoUnit                              %% R901
  FileUnitNumber                      %% R902
  InternalFileVariable                %% R903
  OpenStmt                            %% R904
  ConnectSpec                         %% R905
  FileNameExpr                        %% R906
  IomsgVariable                       %% R907
  CloseStmt                           %% R908
  CloseSpec                           %% R909

%% 9.6 Data transfer statements

  ReadStmt                            %% R910
  WriteStmt                           %% R911
  PrintStmt                           %% R912
  IoControlSpec                       %% R913
  IdVariable                          %% R914
  Format                              %% R915
  InputItem                           %% R916
  OutputItem                          %% R917
  IoImpliedDo                         %% R918
  IoImpliedDoObject                   %% R919
  IoImpliedDoControl                  %% R920

%% 9.7 Waiting on pending data transfer

  WaitStmt                            %% R922
  WaitSpec                            %% R923

%% 9.8 File positioning statements

  BackspaceStmt                        %% R924
  EndfileStmt                          %% R925
  RewindStmt                           %% R926
  PositionSpec                         %% R927

%% 9.9 FLUSH statement

  FlushStmt                           %% R928
  FlushSpec                           %% R929

%% 9.10 File inquiry statement

  InquireStmt                         %% R930
  InquireSpec                         %% R931


context-free syntax

%%TODO-FiXME
%% already defined in R800 section:
%%  Icon  ->  LblRef


%% 9.5 File connection
%%

%%R901
%%         int-expr substituted for file-unit-number
%%         char-variable substituted for internal-file-variable
%%
    IntExpr
  | '*'
  | CharVariable                                 -> IoUnit          {cons("io-unit")}

%%R902
%%         int-expr substituted for scalar-int-expr
%%
  IntExpr                                        -> FileUnitNumber  {cons("file-unit-number")}

%%R903
  CharVariable                                   -> InternalFileVariable  {cons("internal-file-variable")}

%%R904
  LblDef 'OPEN' '(' {ConnectSpec ','}+ ')'   EOS -> OpenStmt        {cons("open-stmt")}

%%R905
%%         default-char-expr substituted for scalar-default-char-expr
%%         int-variable substituted for scalar-int-variable
%%
    (('UNIT'         '=')? FileUnitNumber  )
  | ( 'ACCESS'       '='   DefaultCharExpr )
  | ( 'ACTION'       '='   DefaultCharExpr )
  | ( 'ASYNCHRONOUS' '='   DefaultCharExpr )
  | ( 'BLANK'        '='   DefaultCharExpr )
  | ( 'DECIMAL'      '='   DefaultCharExpr )
  | ( 'DELIM'        '='   DefaultCharExpr )
  | ( 'ENCODING'     '='   DefaultCharExpr )
  | ( 'ERR'          '='   LblRef          )
  | ( 'FILE'         '='   FileNameExpr    )
  | ( 'FORM'         '='   DefaultCharExpr )
  | ( 'IOMSG'        '='   IomsgVariable   )
  | ( 'IOSTAT'       '='   IntVariable     )
  | ( 'NEWUNIT'      '='   IntVariable     )
  | ( 'PAD'          '='   DefaultCharExpr )
  | ( 'POSITION'     '='   DefaultCharExpr )
  | ( 'RECL'         '='   IntExpr         )
  | ( 'ROUND'        '='   DefaultCharExpr )
  | ( 'SIGN'         '='   DefaultCharExpr )
  | ( 'STATUS'       '='   DefaultCharExpr )
%%| ( 'TEAM'         '='   ImageTeam       )  %%TODO - is this in standard for F08?
                                                -> ConnectSpec    {cons("connect-spec")}

%%R906
%%           default-char-expr substituted for scalar-default-char-expr
  DefaultCharExpr                               -> FileNameExpr   {cons("file-name-expr")}

%%R907
%%           default-char-expr substituted for scalar-default-char-expr
  DefaultCharExpr                               -> IomsgVariable  {cons("iomsg-variable")}

%%R908
  LblDef 'CLOSE' '(' {CloseSpec ','}+ ')'   EOS -> CloseStmt      {cons("close-stmt")}

%%R909
%%           default-char-expr substituted for scalar-default-char-expr
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'         '=')? FileUnitNumber )
  | ( 'IOSTAT'       '=' IntVariable      )
  | ( 'IOMSG'        '=' IomsgVariable    )
  | ( 'ERR'          '=' LblRef           )
  | ( 'STATUS'       '=' DefaultCharExpr       )     -> CloseSpec      {cons("close-spec")}


%% 9.6 Data transfer statements
%%

%%910
  LblDef 'READ'
     (
        ('(' {IoControlSpec ','}+ ')'     {InputItem ','}*   )
      | (    Format                  (',' {InputItem ','}+)? )
     )                                                          EOS -> ReadStmt  {cons("read-stmt")}

%%R911
  LblDef 'WRITE' '(' {IoControlSpec ','}+ ')' {OutputItem ','}* EOS -> WriteStmt {cons("write-stmt")}

%%R912
  LblDef 'PRINT' Format (',' {OutputItem ','}+ )?               EOS -> PrintStmt {cons("print-stmt")}

%%R913
%% TODO-F08  io-unit and format must be first and second (without {UNIT,FMT}=)
%%           default-char-expr substituted for scalar-default-char-expr
%%
    (('UNIT'         '=')? IoUnit            )
  | (('FMT'          '=')? Format            )
  | (('NML'          '=')? NamelistGroupName )
  | ( 'ADVANCE'      '='   DefaultCharExpr   )
  | ( 'ASYNCHRONOUS' '='   DefaultCharExpr   )
  | ( 'BLANK'        '='   DefaultCharExpr   )
  | ( 'DECIMAL'      '='   DefaultCharExpr   )
  | ( 'DELIM'        '='   DefaultCharExpr   )
  | ( 'END'          '='   LblRef            )
  | ( 'EOR'          '='   LblRef            )
  | ( 'ERR'          '='   LblRef            )
  | ( 'ID'           '='   IdVariable        )
  | ( 'IOMSG'        '='   IomsgVariable     )
  | ( 'IOSTAT'       '='   IntVariable       )
  | ( 'PAD'          '='   DefaultCharExpr   )
  | ( 'POS'          '='   Expr              )
  | ( 'REC'          '='   Expr              )
  | ( 'ROUND'        '='   DefaultCharExpr   )
  | ( 'SIGN'         '='   DefaultCharExpr   )
  | ( 'SIZE'         '='   IntVariable       )    -> IoControlSpec  {cons("io-control-spec")}

%%R914
  IntVariable                                     -> IdVariable     {cons("id-variable")}

%%R915
    DefaultCharExpr
  | Label
  | '*'                                           -> Format         {cons("format")}

%%R916
    Variable
  | IoImpliedDo                                   -> InputItem      {cons("input-item")}

%%R917
    Expr
  | IoImpliedDo                                   -> OutputItem     {cons("output-item")}

%%R918
  '('
      {IoImpliedDoObject ','}+ ',' IoImpliedDoControl
  ')'                                             -> IoImpliedDo    {cons("io-implied-do")}

%%R919
    InputItem
  | OutputItem                                    -> IoImpliedDoObject  {cons("io-implied-do-object")}

%%R920
  DoVariable '=' IntExpr  ','
                 IntExpr (',' IntExpr)?           -> IoImpliedDoControl {cons("io-implied-do-control")}

%% 9.7 Waiting on pending data transfer
%%

%%R922
  LblDef 'WAIT' '(' {WaitSpec ','}+ ')'             EOS -> WaitStmt       {cons("wait-stmt")}

%%R923
%%           int-expr substituted for scalar-int-expr
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'   '=')? FileUnitNumber )
  | ( 'END'    '=' LblRef           )
  | ( 'EOR'    '=' LblRef           )
  | ( 'ERR'    '=' LblRef           )
  | ( 'ID'     '=' IntExpr          )
  | ( 'IOMSG'  '=' IomsgVariable    )
  | ( 'IOSTAT' '=' IntExpr          )                   -> WaitSpec       {cons("wait-spec")}


%% 9.8 File positioning statements
%%

%%R924
  LblDef 'BACKSPACE'
     (
           ( FileUnitNumber              )
         | ( '(' {PositionSpec ","}+ ')' )
     )                                              EOS -> BackspaceStmt  {cons("backspace-stmt")}

%%R925
%% note: 'endfile' without space is allowed
  LblDef 'END' 'FILE'
     (
           ( FileUnitNumber              )
         | ( '(' {PositionSpec ","}+ ')' )
     )                                              EOS -> EndfileStmt    {cons("endfile-stmt")}

%%R926
  LblDef 'REWIND'
     (
           ( FileUnitNumber              )
         | ( '(' {PositionSpec ","}+ ')' )
     )                                              EOS -> RewindStmt     {cons("rewind-stmt")}

%%R927
    (('UNIT'    '=')? FileUnitNumber )
  | ( 'IOSTAT'  '=' IntVariable      )
  | ( 'IOMSG'   '=' IomsgVariable    )
  | ( 'ERR'     '=' LblRef           )                  -> PositionSpec   {cons("position-spec")}


%% 9.9 FLUSH statement
%%

%%R928
  LblDef 'FLUSH'
     (
            ( FileUnitNumber           )
          | ( '(' {FlushSpec ','}+ ')' )
     )                                              EOS -> FlushStmt   {cons("flush-stmt")}

%%R929
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'    '=')? FileUnitNumber )
  | ( 'IOSTAT'  '=' IntVariable      )
  | ( 'IOMSG'   '=' IomsgVariable    )
  | ( 'ERR'     '=' LblRef           )                  -> FlushSpec   {cons("flush-spec")}


%% 9.10 File inquiry statement
%%

%%R930
%%           int-variable substituted for scalar-int-variable
%%
  LblDef 'INQUIRE'
             (
               '(' {InquireSpec ','}+ ')'
             )
           | (
               '(' 'IOLENGTH' '=' IntVariable ')' {OutputItem ','}+
             )
                                                    EOS -> InquireStmt {cons("inquire-stmt")}

%%R931
%%           default-char-expr substituted for scalar-default-char-expr
%%           logical-variable substituted for scalar-logical-variable
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'         '=')? FileUnitNumber )
  | ( 'FILE'         '=' FileNameExpr     )
  | ( 'ACCESS'       '=' DefaultCharExpr  )
  | ( 'ACTION'       '=' DefaultCharExpr  )
  | ( 'ASYNCHRONOUS' '=' DefaultCharExpr  )
  | ( 'BLANK'        '=' DefaultCharExpr  )
  | ( 'DECIMAL'      '=' DefaultCharExpr  )
  | ( 'DELIM'        '=' DefaultCharExpr  )
  | ( 'DIRECT'       '=' DefaultCharExpr  )
  | ( 'ENCODING'     '=' DefaultCharExpr  )
  | ( 'ERR'          '=' LblRef           )
  | ( 'EXIST '       '=' LogicalVariable  )
  | ( 'FORM'         '=' DefaultCharExpr  )
  | ( 'FORMATTED'    '=' DefaultCharExpr  )
  | ( 'ID'           '=' IntExpr          )
  | ( 'IOMSG'        '=' IomsgVariable    )
  | ( 'IOSTAT'       '=' IntVariable      )
  | ( 'NAME'         '=' DefaultCharExpr  )
  | ( 'NAMED'        '=' LogicalVariable  )
  | ( 'NEXTREC'      '=' IntVariable      )
  | ( 'NUMBER'       '=' IntVariable      )
  | ( 'OPENED'       '=' LogicalVariable  )
  | ( 'PAD'          '=' DefaultCharExpr  )
  | ( 'PENDING'      '=' LogicalVariable  )
  | ( 'POS'          '=' IntVariable      )
  | ( 'POSITION'     '=' DefaultCharExpr  )
  | ( 'READ'         '=' DefaultCharExpr  )
  | ( 'READWRITE'    '=' DefaultCharExpr  )
  | ( 'RECL'         '=' IntVariable      )
  | ( 'ROUND'        '=' DefaultCharExpr  )
  | ( 'SEQUENTIAL '  '=' DefaultCharExpr  )
  | ( 'SIGN'         '=' DefaultCharExpr  )
  | ( 'SIZE'         '=' IntVariable      )
  | ( 'STREAM'       '=' DefaultCharExpr  )
%%| ( 'TEAM'         '=' ImageTeam        )  %%TODO-F08
  | ( 'UNFORMATTED'  '=' DefaultCharExpr  )
  | ( 'WRITE'        '=' DefaultCharExpr  )            -> InquireSpec  {cons("inquire-spec")}
