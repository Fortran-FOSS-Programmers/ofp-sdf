      
%%%%%%%%%%
%% Fortran ISO/IEC 1539:1991 section R9xx Input/Output Statements
%%%%%%%%%%

%%TODO module languages/fortran/syntax/R900IOStatements
module R900IOStatements

imports
%%TODO  languages/fortran/syntax/FortranLex
%%TODO  languages/fortran/syntax/Fortran90
 FortranLex
 Fortran

exports

sorts
  BackspaceStmt CloseSpec CloseStmt ConnectSpec
  EndfileStmt FlushStmt FlushSpec FormatIdentifier
  InputImpliedDo InputItem InputItemList InquireSpec InquireSpecList InquireStmt
  IoControlSpec OpenStmt OutputImpliedDo OutputItem
  OutputItemList PositionSpec PrintStmt RdCtlSpec RdFmtId RdFmtIdExpr
  RdIoCtlSpecList RdUnitId ReadStmt RewindStmt
  WaitStmt WaitSpec WriteStmt    

%% 9.5 File connection

  IoUnit                              %% R901
  FileUnitNumber                      %% R902
  InternalFileVariable                %% R903

  FileNameExpr                        %% R906
  IomsgVariable                       %% R907

  IdVariable                          %% R914
  Format                              %% R915


context-free syntax

%%TODO-FiXME
%% already defined in R800 section:
%%  Icon  ->  LblRef


%% 9.5 File connection
%%

%%R901
%%      int-expr substituted for file-unit-number
%%      char-variable substituted for internal-file-variable
%%
    IntExpr
  | '*'
  | CharVariable                              -> IoUnit          {cons("io-unit")}

%%R902
  IntExpr                                     -> FileUnitNumber  {cons("file-unit-number")}

%%R903
  CharVariable                                -> InternalFileVariable  {cons("internal-file-variable")}

%%R904
  LblDef 'OPEN' '(' {ConnectSpec ','}+ ')'   EOS -> OpenStmt     {cons("open-stmt")}

%%R905
%%           CExpr substituted for scalar-default-char-expr
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'         '=')? FileUnitNumber )
  | ( 'ACCESS'       '='   CExpr          )
  | ( 'ACTION'       '='   CExpr          )
  | ( 'ASYNCHRONOUS' '='   CExpr          )
  | ( 'BLANK'        '='   CExpr          )
  | ( 'DECIMAL'      '='   CExpr          )
  | ( 'DELIM'        '='   CExpr          )
  | ( 'ENCODING'     '='   CExpr          )
  | ( 'ERR'          '='   LblRef         )
  | ( 'FILE'         '='   FileNameExpr   )
  | ( 'FORM'         '='   CExpr          )
  | ( 'IOMSG'        '='   IomsgVariable  )
  | ( 'IOSTAT'       '='   IntVariable    )
  | ( 'NEWUNIT'      '='   IntVariable    )
  | ( 'PAD'          '='   CExpr          )
  | ( 'POSITION'     '='   CExpr          )
  | ( 'RECL'         '='   IntExpr        )
  | ( 'ROUND'        '='   CExpr          )
  | ( 'SIGN'         '='   CExpr          )
  | ( 'STATUS'       '='   CExpr          )
%%| ( 'TEAM'         '='   ImageTeam      )  %%TODO - is this in standard?
                                                -> ConnectSpec  {cons("connect-spec")}

%%R906
  CExpr                                         -> FileNameExpr   {cons("file-name-expr")}

%%R907
  CExpr                                         -> IomsgVariable  {cons("iomsg-variable")}

%%R908
  LblDef 'CLOSE' '(' {CloseSpec ','}+ ')'   EOS -> CloseStmt    {cons("close-stmt")}

%%R909
%%           CExpr substituted for scalar-default-char-expr
%%           int-variable substituted for scalar-int-variable
%%
    (('UNIT'         '=')? FileUnitNumber )
  | ( 'IOSTAT'       '=' IntVariable      )
  | ( 'IOMSG'        '=' IomsgVariable    )
  | ( 'ERR'          '=' LblRef           )
  | ( 'STATUS'       '=' CExpr            )     -> CloseSpec    {cons("close-spec")}

%%910
%%TODO-DELETE   LblDef 'READ' RdCtlSpec InputItemList?     EOS -> ReadStmt   {cons("read-stmt")}
%%TODO-DELETE   LblDef 'READ' RdFmtId                      EOS -> ReadStmt   {cons("read-stmt")}
%%TODO-DELETE   LblDef 'READ' RdFmtId ',' InputItemList    EOS -> ReadStmt   {cons("read-stmt")}
%%TODO-F08 - change FormatIdentifier to Format
%%TODO-F08  LblDef 'READ'  '(' IoControlSpecList ')' InputItemList?  EOS -> ReadStmt   {cons("read-stmt")}
  LblDef 'READ' FormatIdentifier      (',' InputItemList)? EOS -> ReadStmt   {cons("read-stmt")}

%%R911
  LblDef 'WRITE' '(' {IoControlSpec ','}+ ')' {OutputItem ','}* EOS -> WriteStmt {cons("write-stmt")}

%%R912
  LblDef 'PRINT' FormatIdentifier ( ',' OutputItemList )?   EOS -> PrintStmt {cons("print-stmt")}

%%R913
%% io-unit and format must be first and second (without {UNIT,FMT}=)
%% TODO-F08
%%
    (('UNIT'         '=')? IoUnit            )
  | (('FMT'          '=')? Format            )
  | (('NML'          '=')? NamelistGroupName )
  | ( 'ADVANCE'      '='   CExpr             )
  | ( 'ASYNCHRONOUS' '='   CExpr             )
  | ( 'BLANK'        '='   CExpr             )
  | ( 'DECIMAL'      '='   CExpr             )
  | ( 'DELIM'        '='   CExpr             )
  | ( 'END'          '='   LblRef            )
  | ( 'EOR'          '='   LblRef            )
  | ( 'ERR'          '='   LblRef            )
  | ( 'ID'           '='   IdVariable        )
  | ( 'IOMSG'        '='   IomsgVariable     )
  | ( 'IOSTAT'       '='   IntVariable       )
  | ( 'PAD'          '='   CExpr             )
  | ( 'POS'          '='   Expr              )
  | ( 'REC'          '='   Expr              )
  | ( 'ROUND'        '='   CExpr             )
  | ( 'SIGN'         '='   CExpr             )
  | ( 'SIZE'         '='   IntVariable       )    -> IoControlSpec  {cons("io-control-spec")}

%%TODO-F08  UnitIdentifier                             -> IoControlSpecList
%%TODO-F08  UnitIdentifier ',' FormatIdentifier        -> IoControlSpecList
%%TODO-F08  UnitIdentifier ',' {IoControlSpec ','}+    -> IoControlSpecList
%%TODO-F08  UnitIdentifier ',' FormatIdentifier ',' {IoControlSpec ","}+  -> IoControlSpecList
%%TODO-F08  {IoControlSpec ","}+                       -> IoControlSpecList

%%R914
  IntVariable                                     -> IdVariable     {cons("id-variable")}

%%R915
    DefaultCharExpr
  | Label
  | '*'                                           -> Format         {cons("format")}

%%912
  RdUnitId                              -> RdCtlSpec
  '(' RdIoCtlSpecList ')'               -> RdCtlSpec
%%TODO-F08  '(' UFExpr ')'                        -> RdUnitId
  '(' '*' ')'                           -> RdUnitId

%%TODO-F08  UnitIdentifier ',' IoControlSpec      -> RdIoCtlSpecList
%%TODO-F08  UnitIdentifier ',' FormatIdentifier   -> RdIoCtlSpecList
  IoControlSpec                         -> RdIoCtlSpecList
  RdIoCtlSpecList ',' IoControlSpec     -> RdIoCtlSpecList

%%R913 format
  LblRef                                -> RdFmtId
  '*'                                   -> RdFmtId
  COperand                              -> RdFmtId
  COperand    '//' CPrimary             -> RdFmtId
  RdFmtIdExpr '//' CPrimary             -> RdFmtId
%%TODO-F08  '(' UFExpr ')'                        -> RdFmtIdExpr
  '(' IntExpr ')'                       -> RdFmtIdExpr

%%914
  LblRef | CExpr | '*'                  -> FormatIdentifier

%%R914
  Name                                  -> InputItem
  DataRef                               -> InputItem
  InputImpliedDo                        -> InputItem
  {InputItem ","}+                      -> InputItemList

%%R915
  Expr                                  -> OutputItem
  OutputImpliedDo                       -> OutputItem
  {OutputItem ","}+                     -> OutputItemList

%%R916
%%R917
%%R918
  '(' InputItemList  ',' ImpliedDoVariable '=' Expr ',' Expr ')'                -> InputImpliedDo
  '(' InputItemList  ',' ImpliedDoVariable '=' Expr ',' Expr ',' Expr ')'       -> InputImpliedDo

  '(' OutputItemList ',' ImpliedDoVariable '=' Expr ',' Expr ')'                -> OutputImpliedDo
  '(' OutputItemList ',' ImpliedDoVariable '=' Expr ',' Expr ',' Expr ')'       -> OutputImpliedDo

%%R921
  LblDef 'WAIT' '(' {WaitSpec ','}+ ')'             EOS -> WaitStmt       {cons("wait-stmt")}

%%R923
    (('UNIT'   '=')? FileUnitNumber )
  | ( 'END'    '=' LblRef           )
  | ( 'EOR'    '=' LblRef           )
  | ( 'ERR'    '=' LblRef           )
  | ( 'ID'     '=' IntExpr          )
  | ( 'IOMSG'  '=' IomsgVariable    )
  | ( 'IOSTAT' '=' IntExpr          )                   -> WaitSpec       {cons("wait-spec")}

%%R923
  LblDef 'BACKSPACE' FileUnitNumber                 EOS -> BackspaceStmt  {cons("backspace-stmt")}
  LblDef 'BACKSPACE' '(' {PositionSpec ','}+ ')'    EOS -> BackspaceStmt  {cons("backspace-stmt")}

%%R924
%% note: 'endfile' without space is allowed
  LblDef 'END' 'FILE' FileUnitNumber                EOS -> EndfileStmt    {cons("endfile-stmt")}
  LblDef 'END' 'FILE' '(' {PositionSpec ","}+ ')'   EOS -> EndfileStmt    {cons("endfile-stmt")}

%%R925
  LblDef 'REWIND' FileUnitNumber                    EOS -> RewindStmt     {cons("rewind-stmt")}
  LblDef 'REWIND' '(' {PositionSpec ","}+ ')'       EOS -> RewindStmt     {cons("rewind-stmt")}

%%R927
    (('UNIT'    '=')? FileUnitNumber )
  | ( 'IOSTAT'  '=' IntVariable      )
  | ( 'IOMSG'   '=' IomsgVariable    )
  | ( 'ERR'     '=' LblRef           )                  -> PositionSpec   {cons("position-spec")}

%%R924
  FileUnitNumber "," {InquireSpec ","}+  -> InquireSpecList
  FileUnitNumber                         -> InquireSpecList
  {InquireSpec ","}+                     -> InquireSpecList

%%R928
  LblDef 'FLUSH' FileUnitNumber              EOS -> FlushStmt   {cons("flush-stmt")}
  LblDef 'FLUSH' '(' {FlushSpec ","}+ ')'    EOS -> FlushStmt   {cons("flush-stmt")}

%%R929
    (('UNIT'    '=')? FileUnitNumber )
  | ( 'IOSTAT'  '=' IntVariable      )
  | ( 'IOMSG'   '=' IomsgVariable    )
  | ( 'ERR'     '=' LblRef           )           -> FlushSpec   {cons("flush-spec")}

%%R930
  LblDef 'INQUIRE'
             (
               '(' {InquireSpec ','}+ ')'
             )
           | (
               '(' 'IOLENGTH' '=' IntVariable ')' {OutputItem ','}+
             )
                                              EOS -> InquireStmt {cons("inquire-stmt")}

%%R931
    (('UNIT'         '=')? FileUnitNumber )
  | ( 'FILE'         '=' FileNameExpr     )
  | ( 'ACCESS'       '=' CExpr            )
  | ( 'ACTION'       '=' CExpr            )
  | ( 'ASYNCHRONOUS' '=' CExpr            )
  | ( 'BLANK'        '=' CExpr            )
  | ( 'DECIMAL'      '=' CExpr            )
  | ( 'DELIM'        '=' CExpr            )
  | ( 'DIRECT'       '=' CExpr            )
  | ( 'ENCODING'     '=' CExpr            )
  | ( 'ERR'          '=' LblRef           )
  | ( 'EXIST '       '=' LogicalVariable  )
  | ( 'FORM'         '=' CExpr            )
  | ( 'FORMATTED'    '=' CExpr            )
  | ( 'ID'           '=' IntExpr          )
  | ( 'IOMSG'        '=' IomsgVariable    )
  | ( 'IOSTAT'       '=' IntVariable      )
  | ( 'NAME'         '=' CExpr            )
  | ( 'NAMED'        '=' LogicalVariable  )
  | ( 'NEXTREC'      '=' IntVariable      )
  | ( 'NUMBER'       '=' IntVariable      )
  | ( 'OPENED'       '=' LogicalVariable  )
  | ( 'PAD'          '=' CExpr            )
  | ( 'PENDING'      '=' LogicalVariable  )
  | ( 'POS'          '=' IntVariable      )
  | ( 'POSITION'     '=' CExpr            )
  | ( 'READ'         '=' CExpr            )
  | ( 'READWRITE'    '=' CExpr            )
  | ( 'RECL'         '=' IntVariable      )
  | ( 'ROUND'        '=' CExpr            )
  | ( 'SEQUENTIAL '  '=' CExpr            )
  | ( 'SIGN'         '=' CExpr            )
  | ( 'SIZE'         '=' IntVariable      )
  | ( 'STREAM'       '=' CExpr            )
%%| ( 'TEAM'         '=' ImageTeam        )  %%TODO-F08
  | ( 'UNFORMATTED'  '=' CExpr            )
  | ( 'WRITE'        '=' CExpr            )   -> InquireSpec  {cons("inquire-spec")}
